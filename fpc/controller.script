go.property("free", true)
go.property("use_force", false)
go.property("velocity", 0.1)

function init(self)
	if self.free then
		msg.post("#collisionobject", "disable")
	end
	msg.post(".", "acquire_input_focus")
	msg.post("@render:", "use_camera_projection")
	msg.post(".", "acquire_camera_focus")
	
	self.ay = math.rad(go.get(".", "euler.y"))
	self.ax = math.rad(go.get(".", "euler.x"))
	self.rotation = vmath.quat_rotation_y(self.ay) * vmath.quat_rotation_x(self.ax) 
	self.view_dir = vmath.rotate(self.rotation, vmath.vector3(0, 0, -1));
	
	if html5 then
		pointer_lock_ext.html5_pointer_locked()
	else
		pointer_lock_ext.glfw_mouse_lock()
	end
	
end

local function move(self, dir)
	if self.free or not self.use_force then
		go.set_position(go.get_position() + dir * self.velocity)
	else
		msg.post("#collisionobject", "apply_force", {force = vmath.vector3(0, 1, 0) + dir * 300 * self.velocity, position = go.get_position()})
	end
end

function on_input(self, action_id, action)
	
	if action_id == nil and math.abs(action.dx) < 100  and math.abs(action.dy) < 100 then
		self.ax = self.ax + action.dy * 0.01
		self.ay = self.ay - action.dx * 0.01
		self.rotation = vmath.quat_rotation_y(self.ay) *  vmath.quat_rotation_x(self.ax)
		self.view_dir = vmath.rotate(self.rotation, vmath.vector3(0, 0, -1))
		go.set_rotation(self.rotation, ".")
	end

	if action_id == hash("forward") then
		local dir = self.view_dir;
		if not self.free then
			dir.y = 0;
		end
		move(self, dir)
			
	elseif action_id == hash("back") then
		local dir = vmath.rotate(self.rotation, vmath.vector3(0, 0, 1));
		if not self.free then
			dir.y = 0;
		end
		move(self, dir)
	end
	
	if action_id == hash("left") then
		local dir = vmath.rotate(self.rotation, vmath.vector3(-1, 0, 0));
		move(self, dir)
	elseif action_id == hash("right") then
		local dir = vmath.rotate(self.rotation, vmath.vector3(1, 0, 0));
		move(self, dir)
	end
	
end

function on_message(self, message_id, message, sender)
	-- Handle collision
	if message_id == hash("contact_point_response") then
	
		if message.other_group == hash("stairs") and vmath.dot(message.normal, self.view_dir) < -0.5 then
			pprint("stairs!")
			msg.post("#collisionobject", "apply_force", {force = vmath.vector3(0, 40, 0), position = go.get_position()})
		end
	end
end

function final(self)
	pointer_lock_ext.glfw_mouse_unlock()

	if html5 then
		pointer_lock_ext.html5_on_click(nil)
	end
end
